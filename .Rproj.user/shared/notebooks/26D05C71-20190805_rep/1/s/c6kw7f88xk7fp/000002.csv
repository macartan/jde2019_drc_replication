"0","dvs <- c(""da109_not_verifiable"", "
"0","         ""qr026i_fund_misuse"","
"0","         #""qr2729_list_experiment"", "
"0","         ""qr2830_list_experiment"","
"0","         ""stdev_benefits"","
"0","         #""Correct_D_projet"""
"0","         ""Correct_B_projet"")"
"0",""
"0","main_results <- list("
"0","  "
"0","  fin_irregul  =  lm_robust(da109_not_verifiable ~ TUUNGANE ,"
"0","                            data     = vill, "
"0","                            fixed_effects = LOTT_BIN,"
"0","                            weights  = VILL_WEIGHT),"
"0","  "
"0","  embezzl_dir  = lm_robust(qr026i_fund_misuse ~ TUUNGANE  + as.factor(LOTT_BIN) ,"
"0","                           data     = ind, "
"0","                           weights  = VILL_WEIGHT, "
"0","                           clusters = IDS_CDCCODE),"
"0","  "
"0","#  embezzl_list = lm_robust(as.formula(""qr2729_list_experiment  ~ TUUNGANE + RA + RA*TUUNGANE + as.factor(LOTT_BIN)""), "
"0",""
"0","  embezzl_list = lm_robust("
"0","    qr2830_list_experiment ~ TUUNGANE + RB + RB*TUUNGANE + as.factor(LOTT_BIN),                 "
"0","                           data     = ind,"
"0","                           weights  = VILL_WEIGHT,"
"0","                           clusters = IDS_CDCCODE),"
"0","  "
"0","  ineq_benef   = lm_robust(stdev_benefits ~ TUUNGANE , "
"0","                           fixed_effects = LOTT_BIN,"
"0","                           data     = vill,"
"0","                           weights  = VILL_WEIGHT ),"
"0","  "
"0","  chief_domin  = lm_robust("
"0","    Correct_B_projet ~ TUUNGANE + CHIEF + CHIEF*TUUNGANE +  as.factor(LOTT_BIN) , "
"0","                           data     = ind,"
"0","                           clusters = IDS_CDCCODE,"
"0","                           weights  = VILL_WEIGHT))"
"0",""
"0","main_table_pre <- mapply(function(x, name)  { "
"0","  tidy = tidy(x); rownames(tidy) = tidy$term;"
"0","  if( name ==  ""embezzl_list""   ) "
"0","    round(c(Control   = tidy[""RB"", ""estimate""],"
"0","            Control_se   = tidy[""RB"", ""std.error""],"
"0","            Effect    = tidy[""TUUNGANE:RB"", ""estimate""],  "
"0","            std_error = tidy[""TUUNGANE:RB"", ""std.error""],"
"0","            N         = x$N), 3)"
"0","  else if(name == ""chief_domin"")"
"0","    round(c(Control   = tidy[""CHIEFTRUE"", ""estimate""],"
"0","            Control_se   = tidy[""CHIEFTRUE"", ""std.error""],"
"0","            Effect    = tidy[""TUUNGANE:CHIEFTRUE"", ""estimate""],  "
"0","            std_error = tidy[""TUUNGANE:CHIEFTRUE"", ""std.error""],"
"0","            N         = x$N), 3)"
"0","  else"
"0","    round(c(Control  = tidy[""(Intercept)"", ""estimate""],"
"0","            Control_se  = tidy[""(Intercept)"", ""std.error""],"
"0","            Effect    = tidy[""TUUNGANE"", ""estimate""], "
"0","            std_error = tidy[""TUUNGANE"", ""std.error""], "
"0","            N         = x$N ),3)"
"0","  "
"0","}, main_results, names(main_results))"
"0",""
"0","add_cols <- mapply(function(d, dv){"
"0","  d <- d %>% arrange(LOTT_BIN)"
"0","  N_cluster <- ifelse(length(unique(d$IDV_CDCCODE[!is.na(d[[dv]])])) > 0,"
"0","                      length(unique(d$IDV_CDCCODE[!is.na(d[[dv]])])),"
"0","                      length(unique(d$IDS_CDCCODE[!is.na(d[[dv]])])))"
"0","  "
"0","  #block weights in the data"
"0","  d$dv <- d[[dv]][]"
"0","  #block average for control"
"0","  ave_ctrl_blocks <- d %>% "
"0","    subset(TUUNGANE == 0) %>%"
"0","    group_by(LOTT_BIN) %>%"
"0","    summarize(block_n = sum(!is.na(dv)),"
"0","              ave = mean(dv, na.rm = TRUE)) %>% ungroup() %>%"
"0","    mutate(block_w = block_n/nrow(.))"
"0","  #weighted sd of block averages"
"0","  #w_sd_ctrl_blocks <- sqrt(sum(block_w * (ave_ctrl_blocks$ave - w_ave_ctrl_blocks)^2, na.rm = TRUE))"
"0","  w_sd_ctrl_blocks <- sd(d$dv, na.rm = TRUE)"
"0","  "
"0","  return(round(rbind(w_ave_ctrl_blocks, w_sd_ctrl_blocks, N_cluster), 3))"
"0","}, d = list(vill, ind, ind, vill, ind), dv = dvs) %>% t()"
"0",""
"0","main_table <- cbind(control.mean = add_cols[,1], control.sd = add_cols[,2], t(main_table_pre)[,-c(1:2)], N_cluster = add_cols[,3])"
"0",""
"0","#maintain beta1 coefficient and standard error instead of control mean for ""embezzl_dir"", ""chief_domin"""
"0","keep_beta1 <- rownames(main_table) %in% c(""embezzl_list"", ""chief_domin"")"
"0","main_table[keep_beta1, ""control.mean""] <- t(main_table_pre)[keep_beta1, ""Control""]"
"0","main_table[keep_beta1, ""control.sd""] <- t(main_table_pre)[keep_beta1, ""Control_se""]"
"0",""
"0","kable(main_table)"
