
###########
# PREPARE VARIABLES FOR BALANCE TESTS
###########

# IDV: Distance from chiefdom head town (mean of respondents in the village)
DIST <- abd_ind %>%
  dplyr::select(qe013_k_chef_chefferie_hrs,
                qe013_k_chef_chefferie_mns,
                IDV, IDS) %>%
  dplyr::mutate(qe013_hrs = ifelse(qe013_k_chef_chefferie_hrs < 0,
                                   NA, qe013_k_chef_chefferie_hrs),
                qe013_mns = ifelse(qe013_k_chef_chefferie_mns < 0,
                                   NA, qe013_k_chef_chefferie_mns),
                distance = qe013_hrs + qe013_mns/60) %>%
  dplyr::group_by(IDV) %>%
  dplyr::summarise(distance = mean(distance, na.rm = TRUE)) %>%
  dplyr::mutate(IDV = as.numeric(IDV))
#hist(DIST$distance)

# IDV: Public goods present in July 2006 (from chief)
PUBLIC <- abd_vill %>%
  dplyr::select(cq023_a1_wells_2006,
                cq024_a1_schools_2006,
                cq025_a1_cliniques_2006, 
                cq026_a1_churches_2006, 
                cq027_a1_halls_2006,
                IDV)  %>%
  dplyr::mutate(wells = ifelse(cq023_a1_wells_2006 < 0, NA, cq023_a1_wells_2006),
                schools = ifelse(cq024_a1_schools_2006 < 0, NA, cq024_a1_schools_2006),
                clinics = ifelse(cq025_a1_cliniques_2006 < 0, NA, cq025_a1_cliniques_2006),
                churches = ifelse(cq026_a1_churches_2006 < 0, NA, cq026_a1_churches_2006),
                halls = ifelse(cq027_a1_halls_2006 < 0, NA, cq027_a1_halls_2006))
PUBLIC$public2006 = rowSums(PUBLIC[,c(7:11)], na.rm = TRUE)
#public2006 needs to be "NA" if all are NAs
PUBLIC <- within(PUBLIC, public2006[is.na(wells) & is.na(clinics) & is.na(churches) & is.na(halls)] <- NA)  
#hist(PUBLIC$public2006)

# IDV: Migration into the village in 2006 (from chief)
MIG <- abd_vill %>%
  dplyr::select(cq0136_idp_2006, cq0137_idp_returned_2006, cq0138_refugie_2006, cq0139_refugie_repat_2006,
                IDV) %>%
  dplyr::mutate(idp = ifelse(cq0136_idp_2006 < 0, NA, cq0136_idp_2006),
                idp = ifelse(cq0136_idp_2006 > 200, NA, idp),
                idpret = ifelse(cq0137_idp_returned_2006 < 0, NA, cq0137_idp_returned_2006),
                idpret = ifelse(cq0137_idp_returned_2006 > 200, NA, idpret),
                ref = ifelse(cq0138_refugie_2006 < 0, NA, cq0138_refugie_2006),
                ref = ifelse(cq0138_refugie_2006 > 200, NA, ref),                
                refret = ifelse(cq0139_refugie_repat_2006 < 0, NA, cq0139_refugie_repat_2006),
                refret = ifelse(cq0139_refugie_repat_2006 > 200, NA, refret))
MIG$mig2006 = rowSums(MIG[,c(6:9)], na.rm = TRUE)
#mig2006 needs to be "NA" if all are NAs
MIG <- within(MIG, mig2006[is.na(cq0136_idp_2006) & is.na(cq0137_idp_returned_2006) & is.na(cq0138_refugie_2006) & is.na(cq0139_refugie_repat_2006)] <- NA)  
#hist(MIG$mig2006)


# IDV: Existance comittee or association in 2006 (from chief)
# WHY NOT BASED ON CQ 23 - 27 ?

COM <-  abd_ind  %>%
  dplyr::filter(IDS_TYPES=="DC") %>%
  dplyr::select(IDV,  starts_with("q5362_c_committee_since"))

COUNT <- 1*(COM[,-1] > 6) 
COUNT[COM[,-1] < 0] <- NA
COM$com2006 = rowSums(COUNT, na.rm = TRUE)

# com2006 needs to be "NA" if all are NAs                
COM$com2006[rowSums(!is.na(COUNT))==0] <- NA

# Really? but that means that if there is no  committee we say NA rather than 0. Why?
# Note weirdly this selects on places with a committee surviving; 
#hist(COM$com2006)

# Can add in as 0s places where chief says none exist -- get another 63 places
# COM2<-  read.dta("Data/DRC2012_ABD_INDIV.dta", convert.factors = FALSE)  %>%
#   dplyr::filter(IDS_TYPES=="DC") %>%
#  dplyr::select(IDV,  starts_with("q5362_a_committee_exist"))
# COM$SOME_COMMITTEE <-  (rowSums(COM2[,-1]!="")>0)
# table(COM$SOME_COMMITTEE, COM$com2006)
# table(COM$com2006)
# COM$com2006[COM$SOME_COMMITTEE & is.na(COM$com2006)] <- 0
# table(COM$com2006)


# IDS: gender of respondent
# IDS: age of respondent
STATS <- roster %>%
  dplyr::filter(IDO==101, IDS_TYPES!="DC", IDS_TYPES!="DCDV") %>%
  dplyr::select(IDV, IDS, qf007_gender, qf009_birthyear) %>%
  dplyr::mutate(
    gender = qf007_gender,
    age = qf009_birthyear %>%
      ifelse(. < 1900 | . > 2012, yes = NA, no = .) %>%
      "-"(2011,.) %>%
      ifelse(. > stats::quantile(., probs = .99, na.rm=TRUE), yes = NA, no = .)) 

# Here are examples of “almost” pre-treatment variables you could start on:
# Distance to the village mine (chief survey, CQ 22)
# Ethnic diversity of the village (chief survey CQ 12) – not really pre-treatment but elsewhere we show that treatment induces no migration or survival change.
# e.g. geography, institutional arrangements, exposure to violence, wealth, etc

# How did the previous chief come to power? (CQ 48 – maybe a dummy for popular enthronement options 4 and 5)
VILL <- abd_vill

VILL <- VILL %>% mutate(former_chief_elec = case_when(
  cq048_how_former_chief == "4 Elected by inhabitants" ~ 1,
  cq048_how_former_chief == "5 Plebiscite by inhabitants" ~ 1,
  cq048_how_former_chief == "1 Elderly choose" ~ 0,
  cq048_how_former_chief == "2 King and other chiefs" ~ 0,
  cq048_how_former_chief == "3 Inherited" ~ 0,
  cq048_how_former_chief == "6 By force" ~ 0,
  cq048_how_former_chief == "7 Selected by pol or trad leadership" ~ 0
))

# Mineral composition (chief survey, CQ 20)
recode_yes_no <- function(col){
  case_when(col %in% c(-8, 0) ~ 0,
            col == 1 ~ 1)
}

mineral_cols <- grep("cq020_", names(VILL))
MINE <- as.data.frame(apply(VILL[,mineral_cols], 2, recode_yes_no)) 
names(MINE) <- gsub("cq020_", "", names(MINE))
MINE$mineral_index <- rowSums(MINE)

VILL <- cbind(VILL, MINE)

## END ##
