

# Function to do all analyses together and save; with various options

all_analyses <- function(
  .treatment = "TUUNGANE", 
  .village_level =FALSE, 
  .weights = "WEIGHT", 
  .subgroupcondition = "NONE", 
  .add.controls = NULL, 
  .interaction_diff_impute = TRUE,
  print_progress = TRUE
) {

   if(print_progress) print("1 Irregularities")
  # 1 Irregularities: VILLAGE LEVEL RAPID
  out_da109 <-  analyze(.data    = D_AUDIT_NOTVERI, 
                        .outcome = "da109_not_verifiable", 
                        .village_level = FALSE,  # Because always at village level 
                        .cluster = NULL,         # Because only one obs per cluster 
                        .treat = .treatment, 
                        .controls = .add.controls, 
                        .subgroupcondition=.subgroupcondition, 
                        .weights = .weights)
  
  # 2 Embezzlement: DIRECT: RAPID ONLY -- 
  .cluster2 <- "IDS_CDCCODE"
  if(.village_level) .cluster2 <- NULL
         
  out_embezDIR <- analyze(.data = ABD_INDIV_DIRECT, 
                          .outcome = "qr026i_fund_misuse", 
                          .cluster = .cluster2,  # Because RAPID only - NO CLUSTERING WHEN AT VILLAGE LEVEL 
                          .treat = .treatment, 
                          .village_level =.village_level , 
                          .controls = .add.controls, 
                          .subgroupcondition=.subgroupcondition, 
                          .weights = .weights)
  
  # 3 Embezzlement: LIST
  if(!.village_level){
    # Note: RA==1 is Long list for Qs 27/29;  RB==1 is Long list for Qs 27/29; # We only do the first one
    if(is.null(.add.controls))  controls3 <-   paste0("RA + RA*", .treat = .treatment)
    if(!is.null(.add.controls))  controls3 <-  paste0("RA + RA*", .treat = .treatment, "+", .add.controls)
    out_embezRA <-  analyze(.data = ABD_INDIV_LIST, 
                            .outcome = "qr2729_list_experiment", 
                            .cluster = "IDS_CDCCODE", 
                            .treat = .treatment, 
                            .village_level =.village_level , 
                            .controls = controls3, 
                            .subgroupcondition=.subgroupcondition, 
                            .weights = .weights)
    
    }
  
  #   If done at village level the outcome becomes the difference between long list and short list and controls added in the usual way
  if(.village_level){
    .cluster2 <- "IDS_CDCCODE"
    if(.village_level) .cluster2 <- NULL
    
    out_embezRA <-  analyze(.data = ABD_INDIV_LIST, 
                            .outcome = "qr2729_list_experiment", 
                            .cluster = .cluster2,  # Because only one group at village level 
                            .treat = .treatment, 
                            .village_level =.village_level , 
                            .controls = .add.controls, 
                            .subgroupcondition=.subgroupcondition, 
                            .weights = .weights,
                            .within_village_interaction = "RA",
                            .interaction_diff_impute = .interaction_diff_impute 
                            )
    
                      }
  
     if(print_progress) print("4 benef next - dropped")
  # # 4 Beneficiaries
  # out_benef <-  analyze(.data = ABD_INDIV_PROP, 
  #                       .outcome = "proportion_benef", 
  #                       .treat = .treatment, 
  #                       .village_level = FALSE,  # Because always at village level 
  #                       .cluster = NULL,         # Because only one obs per cluster 
  #                       .controls = .add.controls, 
  #                       .subgroupcondition=.subgroupcondition, 
  #                       .weights = .weights
  #                       )
     if(print_progress) print("5 stdev_benef next")

  # 5 Ineq Benefits
  out_stdev_benefits <-  analyze(.data = ABD_INDIV_BEN, 
                                 .outcome = "stdev_benefits", 
                                 .treat = .treatment, 
                                 .village_level = FALSE,  # Because always at village level 
                                 .cluster = NULL,         # Because only one obs per cluster 
                                 .controls = .add.controls, 
                                 .subgroupcondition=.subgroupcondition, 
                                 .weights = .weights)
  
  # 6 Dominance # CHECK WHY OUT_RIGH2 IS THERE WITH MORE DATA
  if(!.village_level){
    if(is.null(.add.controls))  controls6a <-   paste0("CHIEF + CHIEF*", .treatment)
    if(!is.null(.add.controls))  controls6a <-  paste0("CHIEF + CHIEF*", .treatment, "+", .add.controls)
    
    out_right1 <-  analyze(.data = CHIEF_DOM, 
                         .outcome = "Correct_D_projet", 
                         .cluster = "IDS_CDCCODE", 
                         .treat = .treatment, 
                         .village_level =.village_level , 
                         .controls = controls6a, 
                         .subgroupcondition=.subgroupcondition, 
                         .weights = .weights)
     }
#  If done at village level the outcome becomes the difference between chief and others and controls added in the usual way
  if(.village_level){
    out_right1 <-  analyze(.data = CHIEF_DOM, 
                           .outcome = "Correct_D_projet", 
                           .cluster = NULL,             # Because only one obs per cluster at village level
                            .treat = .treatment, 
                            .village_level =.village_level , 
                            .controls = .add.controls, 
                            .subgroupcondition=.subgroupcondition, 
                            .weights = .weights,
                            .within_village_interaction = "CHIEF",
                            .interaction_diff_impute = .interaction_diff_impute 
    )
    }
  
    
  # 7 Participation
     if(print_progress) print("7 PART_A1 next")
  out_PART_A1 <- analyze(.data = ABD_VILL_ATTEND_7, 
                         .outcome = "PART_A1", 
                         .treat = .treatment, 
                         .village_level = FALSE,  # Because always at village level 
                         .cluster = NULL,         # Because only one obs per cluster 
                         .controls = .add.controls, 
                         .subgroupcondition=.subgroupcondition, 
                         .weights = .weights)
  
  # 8, 9 Interventions
  out_N_INTERV <- analyze(.data = AB_DISC, 
                          .outcome = "N_INTERV", 
                          .treat = .treatment, 
                          .village_level = FALSE,  # Because always at village level 
                          .cluster = NULL,         # Because only one obs per cluster 
                          .subgroupcondition=.subgroupcondition, 
                          .weights = .weights)

  out_MALE_DOM <- analyze(.data = AB_DISC, 
                          .outcome = "MALE_DOM", 
                          .treat = .treatment, 
                          .village_level = FALSE,  # Because always at village level 
                          .cluster = NULL,         # Because only one obs per cluster 
                          .controls = .add.controls, 
                          .subgroupcondition=.subgroupcondition, 
                          .weights = .weights)

     if(print_progress) print("10 selection next")
  
  # 10 Selection
  out_SELECTION <- analyze(.data = ABD_VILL_SEL, 
                           .outcome = "MFI_SELECTION", 
                           .treat = .treatment, 
                           .village_level = FALSE,  # Because always at village level 
                           .cluster = NULL,         # Because only one obs per cluster 
                           .controls = .add.controls, 
                           .subgroupcondition=.subgroupcondition, 
                           .weights = .weights)
  
  # 11 Composition
  out_COMPOSITION <- analyze(.data = ABD_VILL_1,  
                           .outcome = "MFI_COMPOSITION", 
                           .treat = .treatment, 
                           .village_level = FALSE,  # Because always at village level 
                           .cluster = NULL,         # Because only one obs per cluster 
                           .controls = .add.controls, 
                           .subgroupcondition=.subgroupcondition, 
                           .weights = .weights)

     if(print_progress) print("12 mechanisms next")
  # 12 Mechanisms
  out_MECHANISMS <- analyze(.data = ABD_MERGE, 
                            .outcome = "MFI_MECHANISMS", 
                            .treat = .treatment, 
                            .village_level = FALSE,  # Because always at village level 
                            .cluster = NULL,         # Because only one obs per cluster 
                            .controls = .add.controls, 
                            .subgroupcondition=.subgroupcondition, 
                            .weights = .weights)
  
     if(print_progress) print("13 Complaints")
  # 13 Complaints
  .cluster2 <- "IDS_CDCCODE"
  if(.village_level) .cluster2 <- NULL
  
  out_COMPLAINTS <-  analyze(.data = ABD_INDIV_COMPLAINTS, 
                             .outcome = "MFI_COMPLAINTS", 
                             .cluster = .cluster2,   # Because no clustering when at village level (RAPID villages only)  
                             .treat = .treatment, 
                             .village_level =.village_level , 
                             .controls = .add.controls, 
                             .subgroupcondition=.subgroupcondition, 
                             .weights = .weights)


     if(print_progress) print("14 knows amount")

    # 14 Knows Project Amount
  .cluster2 <- "IDS_CDCCODE"
  if(.village_level) .cluster2 <- NULL

    out_qr002 <-analyze(.data  = ABD_INDIV_KNOWS, 
                            .outcome = "qr002CORRECT", 
                            .cluster = .cluster2,   # Because no clustering when at village level (RAPID villages only)  
                            .treat = .treatment, 
                            .village_level =.village_level , 
                            .controls = .add.controls, 
                            .subgroupcondition=.subgroupcondition, 
                            .weights = .weights)
  
     if(print_progress) print("15 seek info")
  # 15 Seek Info
  .cluster2 <- "IDS_CDCCODE"
  if(.village_level) .cluster2 <- NULL
  out_qi003 <- analyze(.data = ABD_INDIV_SEEKS, 
                       .outcome = "qi003_accept",
                       .cluster = .cluster2,   # Because no clustering when at village level (RAPID villages only)  
                       .treat = .treatment, 
                       .village_level =.village_level , 
                       .controls = .add.controls, 
                       .subgroupcondition=.subgroupcondition, 
                       .weights = .weights)
  
     if(print_progress) print("16 accounting")
  # 16 Accounting
  out_ACCOUNTING <- analyze(.data = D_AUDIT_ACCOUNT, 
                       .outcome = "MFI_ACCOUNTING", 
                       .treat = .treatment, 
                       .village_level = FALSE,  # Because always at village level 
                       .cluster = NULL,         # Because only one obs per cluster 
                       .controls = .add.controls, 
                       .subgroupcondition=.subgroupcondition, 
                       .weights = .weights)
  
  
     if(print_progress) print("17 transmission")
  
  # 17 Transmission
  if(is.null(.add.controls))  controls15 <-   paste0("IDS_RAPID + IDS_RAPID*", .treatment)
  if(!is.null(.add.controls))  controls15 <-  paste0("IDS_RAPID + IDS_RAPID*", .treatment, "+", .add.controls)
  out_SUM_HEALTH <- analyze(.data = ABD_INDIV_HEALTH, 
                       .outcome  = "SUM_HEALTH_INFO", 
                       .cluster  = "IDS_CDCCODE", 
                       .treat = .treatment, 
                       .village_level =.village_level , 
                       .controls = controls15, 
                       .subgroupcondition=.subgroupcondition, 
                       .weights = .weights)
  
  
  out <-list(out_da109   =out_da109,
             out_embezDIR    =out_embezDIR,
             out_embezRA     =out_embezRA,
 #            out_benef       =out_benef,
             out_stdev_benefits=out_stdev_benefits,
             out_right1      =out_right1,
             out_PART_A1     =out_PART_A1, 
             out_N_INTERV    =out_N_INTERV, 
             out_MALE_DOM    =out_MALE_DOM, 
             out_SELECTION   =out_SELECTION, 
             out_COMPOSITION =out_COMPOSITION, 
             out_MECHANISMS  =out_MECHANISMS, 
             out_COMPLAINTS  =out_COMPLAINTS, 
             out_qr002       =out_qr002,
             out_qi003       =out_qi003,
             out_ACCOUNTING  =out_ACCOUNTING, 
             out_SUM_HEALTH  =out_SUM_HEALTH)
  return(out)
}



## END ##
